//! This file is autogenerated by the ToB build workflow. DO NOT EDIT
include <NopSCADlib/lib.scad>

//Position children at location of mounting holes
module base_pcb_mounts(){
    mounts = [
        {% for loc in board.mounting_hole_locations %}
        [ {{loc.x}},{{loc.y}} ],
        {% endfor %}
    ];
    for (loc=mounts) {
        translate([loc[0], loc[1], 0]) children();
    }
}

module base_pcb(){
    difference(){
        color("green") linear_extrude(1.6) import(file="../dxf/{{cookiecutter.pkg_name}}_edge_plan.dxf");
        base_pcb_mounts() cylinder(r=screw_pilot_hole({{board.mounting_hole.toNopSCADlib}}, h=2, center=True));
    }
}

{% for component in components %}
module position_{{component.reference}}(){
    //Position component {{component.reference}}
    translate([{{component.pos.x}},{{component.pos.y}}, 0]) children();
}

module {{component.reference}}(){
    //NopSCADlib definition for component {{component.reference}}, a {{component.part}}
    {% if "SOIC" in component.footprint %}
    smd_soic({{component.part}}, {{component.values | join(",")}});
    {% elif "SOT" in component.footprint %}
    smd_sot({{component.part}}, {{component.values | join(",")}});
    {% elif "QFP" in component.footprint %}
    smd_qfp({{component.part}}, {{component.values | join(",")}});
    {% elif "DIP" in component.footprint %}
    dip({{component.values}});
    {% elif "PinHeader" in component.footprint %}

    {% elif "JST_SH" in component.footprint %}

    {% elif "JST_XH" in component.footprint %}

    {% elif "JST_PH" in component.footprint %}

    {% elif "PinHeader" in component.footprint %}


    {% else %} 
    chip({{component.values}});
    {% endif %}
}
{% endfor %}


module {{pkg_name}}_board_assembly()
assembly("Asembled {{pkg_name}} board"){
    {% for component in components %}
    position_{{component.reference}}() {{component.reference}}();
    {% endfor %}
}



if($preview)
    {{pkg_name}}_board_assembly();